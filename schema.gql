# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  """uuid"""
  uuid: String!

  """이름"""
  name: String!

  """닉네임"""
  nickName: String!

  """이메일"""
  email: String!

  """프로필 이미지 url"""
  profileImageUrl: String!

  """provider"""
  provider: Provider!

  """권한"""
  role: Role!

  """등록날짜"""
  createdAt: DateTime!

  """수정날짜"""
  updatedAt: DateTime!
}

"""회원가입시 provider"""
enum Provider {
  GOOGLE
  KAKAO
}

"""권한"""
enum Role {
  ADMIN
  USER
  GUEST
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type UserPageInfo {
  startCursor: String
  endCursor: String
  hasNextPage: Boolean
  hasPreviousPage: Boolean
}

type PaginatedUser {
  nodes: [User!]
  pageInfo: UserPageInfo
}

type Course {
  """제목"""
  title: String!

  """내용"""
  content: String!

  """등록자"""
  registerUser: User!

  """등록날짜"""
  createdAt: DateTime!

  """수정날짜"""
  updatedAt: DateTime!
}

type ExistNickNameOutput {
  """닉네임 존재 여부"""
  exist: Boolean!
}

type Me {
  uuid: String!

  """닉네임"""
  nickName: String!
}

type OtpOutput {
  """일회용 비밀번호"""
  value: String!
}

type SignInOutput {
  """jwt token"""
  accessToken: String!
}

type FileListOut {
  """내용물"""
  content: String!
}

type Query {
  users(next: Int = 10, after: String, before: String): PaginatedUser!
  courseList: [Course!]!
  course(id: Int!): Course!

  """자기 정보 가져오기"""
  me: Me!

  """닉네임 존재 여부 확인"""
  existNickName(existNickNameInput: ExistNickNameInput!): ExistNickNameOutput!

  """일회용 비밀번호"""
  otp: OtpOutput!
  findObject: FileListOut!
}

input ExistNickNameInput {
  """닉네임"""
  nickName: String!
}

type Mutation {
  createCourse(createCourseInput: CreateCourseInput!): Course!
  updateCourse(updateCourseInput: UpdateCourseInput!): Course!
  removeCourse(id: Int!): Course!

  """로그인"""
  signIn(signInInput: SignInInput!): SignInOutput!

  """회원가입"""
  signUp(signUpInput: SignUpInput!): Me!
}

input CreateCourseInput {
  """제목"""
  title: String!

  """내용"""
  content: String!
}

input UpdateCourseInput {
  """제목"""
  title: String

  """내용"""
  content: String
  id: Int!
}

input SignInInput {
  email: String!
  provider: Provider!

  """장비 정보"""
  device: SignInDeviceInput
}

input SignInDeviceInput {
  """Ios/Android"""
  os: OS!

  """기기 정보"""
  model: String!

  """버전 정보"""
  version: String!
}

"""운영체제"""
enum OS {
  IOS
  ANDROID
}

input SignUpInput {
  email: String!
  provider: Provider!

  """이름"""
  name: String!

  """닉네임"""
  nickName: String!

  """프로필 이미지 url"""
  profileImageUrl: String!
}

type Subscription {
  newCourse: Course!
}
